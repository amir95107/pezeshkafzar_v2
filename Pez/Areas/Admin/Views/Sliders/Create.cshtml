@model DataLayer.Models.Slider

@{
    ViewBag.Title = "Create";
}

<div style="height:75px"></div>
<div class="container bg-white p-2" dir="rtl">

    <h2 class="text-center p-2 border shadow ">افزودن اسلایدر جدید</h2>

    @using (Html.BeginForm("Create", "Sliders", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" id="IsUsed" name="IsUsed" value="false" />
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    <input type="file" name="imgUp" />
                    @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.TextBoxFor(model => model.StartDate)
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.TextBoxFor(model => model.EndDate)
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 ">
                    <input type="submit" value="ثبت" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("بازگشت", "Index")
    </div>

</div>

@section Scripts{

    <link href="~/Admin/Content/css/kendo.common.min.css" rel="stylesheet" />
    <script src="~/Admin/Content/js/plugins/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {

            // create DatePicker from input HTML element
            $("#EndDate").kendoDatePicker();
            $("#StartDate").kendoDatePicker();
        });
    </script>
}
