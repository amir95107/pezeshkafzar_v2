@using DataLayer.Models
@model Pezeshkafzar_v2.ViewModels.CreateProductViewModel

@{
    ViewBag.Title = "Create";
}
<div style="height:75px"></div>
<div class="container bg-white p-2" dir="rtl">

    <h2 class="text-center p-2 border shadow ">افزودن محصول جدید</h2>

    @* @using(Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    { *@
    <form action="/admin/products/create" method="post" id="Create" class="form-horizontal" enctype="multipart/form-data">
        <div class="row">
            <div class="col-md-8">
                <div class="card p-2">
                    @Html.AntiForgeryToken()
                    @if (ViewBag.ErrorSelectedGroup == true)
                    {
                        <div class="alert alert-danger">
                            لطفا گروه محصول را انتخاب کنید
                        </div>
                    }
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label">عنوان</label>
                            <div class="">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">لینک صفحه (در صورت خالی بودن همان عنوان صفحه ثبت میشود)</label>
                            <div class="">
                                @Html.EditorFor(model => model.SefUrl, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SefUrl, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">توضیح کوتاه</label>
                            <div class="">
                                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">توضیحات</label>
                            <div class="">
                                @Html.TextAreaFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">قیمت</label>
                            <div class="">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @min = "1" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label">قیمت پس از تخفیف</label>
                            <div class="">
                                @Html.EditorFor(model => model.PriceAfterDiscount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PriceAfterDiscount, "", new { @class = "text-danger" })
                            </div>
                            <div class="row m-0" id="discountsArea">
                                <a class="btn btn-outline-info m-2 btn-set-discount" onclick="setPriceAfterDiscount(5,event)">5%</a>
                                <a class="btn btn-outline-info m-2 btn-set-discount" onclick="setPriceAfterDiscount(10,event)">10%</a>
                                <a class="btn btn-outline-info m-2 btn-set-discount" onclick="setPriceAfterDiscount(15,event)">15%</a>
                                <a class="btn btn-outline-info m-2 btn-set-discount" onclick="setPriceAfterDiscount(20,event)">20%</a>
                                <a class="btn btn-outline-info m-2 btn-set-discount" onclick="setPriceAfterDiscount(25,event)">25%</a>
                                <a class="btn btn-outline-info m-2 btn-set-discount" onclick="setPriceAfterDiscount(30,event)">30%</a>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label ">موجودی انبار</label>
                            <div class="">
                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label ">کلمات کلیدی</label>
                            <div class="">
                                <input id="Tags" type="text" oninput="searchTags(this.value)" name="tags" class="form-control" placeholder="کلمات کلیدی را با # جدا کنید" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label " for="Garanty">ضمانت محصول</label>
                            <div class="">
                                <textarea type="text" name="Garanty" id="Garanty" class="form-control"></textarea>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label " for="IsInBestselling">@Html.LabelFor(m => m.IsInBestselling)</label>
                            <div class="">
                                @Html.CheckBoxFor(m => m.IsInBestselling)
                                @* @Html.ValidationMessageFor(model => model.IsInBestselling, "", new { @class = "text-danger" }) *@
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 ">
                                <input type="submit" value="ثبت محصول" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-title">تصویر محصول</div>
                    <div class="card-body">
                        <img id="imgPreviewProduct" style="margin: 8px auto" class="thumbnail" src="/Images/ProductImages/images.jpg" />
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label " })
                            @*<div>
                            <a class="btn btn-default" onclick="selectFromMedia()">انتخاب از کتابخانه</a>
                            </div>*@
                            <div class="">

                                <input type="file" id="imageProduct" enc name="imageProduct" accept="image/*" />
                                @*<input type="hidden" id="imageNameInput" name="imageProduct" />*@
                                @* @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" }) *@
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <header class="card-title">انتخاب گروه</header>
                    <div class="card-body">
                        @{
                            List<Product_Groups> groups = ViewBag.Groups;

                            <ul class="group-level-1 group-level">
                                @foreach (var group in groups.Where(g => g.ParentID == null))
                                {
                                    <li class="group-level-1-li">
                                        <input type="checkbox" name="selectedGroups" data-level="1" value="@group.Id" /> <span>@group.GroupTitle</span>
                                        @if (groups.Any(g => g.ParentID == group.Id))
                                        {
                                            <ul class="group-level-2 group-level">
                                                @foreach (var subGroup in groups.Where(g => g.ParentID == group.Id))
                                                {
                                                    <li class="group-level-2-li">
                                                        <input type="checkbox" name="selectedGroups" data-level="2" value="@subGroup.Id" /> <span>@subGroup.GroupTitle</span>
                                                        @if (groups.Any(ss => ss.ParentID == subGroup.Id))
                                                        {
                                                            <ul class="group-level-3 group-level">
                                                                @foreach (var subSubGroup in groups.Where(ss => ss.ParentID == subGroup.Id))
                                                                {
                                                                    <li class="group-level-3-li">
                                                                        <input type="checkbox" data-level="3" name="selectedGroups" value="@subSubGroup.Id" /> <span>@subSubGroup.GroupTitle</span>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
    <div class="text-left">
        <a class="btn btn-outline-warning" href="/admin/products/index">بازگشت به لیست محصولات</a>
    </div>
</div>

@section Scripts
{
    <script src="~/admin/content/ckeditor/ckeditor.js"></script>
    <script src="~/admin/content/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#Text,#Garanty').ckeditor();
        });
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgPreviewProduct').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);

            }
        }

        $("#imageProduct").change(function () {
            readURL(this);
        });

        let _torobPrice = "";
        torobPrice = () => {
            var title = $('#Title').val();
            if (!title) return;
            const button = `<hr /><a onclick="setPrice()" class="btn btn-primary btn-set-price m-auto text-white" dir="rtl">به عنوان قیمت این کالا تنظیم کن</a>`;
            if (_torobPrice === "") {
                $('#AllModal').modal('show').find('.modal-body').html(loader).addClass('text-center')
                $.get('/api/price?name=' + title, res => {
                    $('.modal-body').html('کمترین قیمت این کالا در ترب: ' + res + ' تومان').append(button);
                    _torobPrice = res;
                })
            } else {
                $('#AllModal').modal('show').find('.modal-body').html('کمترین قیمت این کالا در ترب: ' + _torobPrice + ' تومان').append(button);
            }

        }

        setPrice = () => {

            let price = _torobPrice.replace(/٫/g, "");
            price = fixNumbers(price);
            $('#Price,#PriceAfterDiscount').val(price)
            $('#AllModal').modal('hide');
        }


        fixNumbers = (str) => {
            var persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g],
                arabicNumbers = [/٠/g, /١/g, /٢/g, /٣/g, /٤/g, /٥/g, /٦/g, /٧/g, /٨/g, /٩/g];
            if (typeof str === 'string') {
                for (var i = 0; i < 10; i++) {
                    str = str.replace(persianNumbers[i], i).replace(arabicNumbers[i], i);
                }
            }
            return str;
        };

        setPriceAfterDiscount = (discount, e) => {
            if (!discount) return;
            const price = $('#Price').val();
            if (!price) return;
            $('.btn-set-discount').removeClass('active')
            $(e.currentTarget).addClass('active')
            const after = price * (100 - discount) / 100;
            $('#PriceAfterDiscount').val(after)
        }

        calculateDiscount = () => {
            const price = $('#Price').val(), after = $('#PriceAfterDiscount').val();
            if (!price || !after) return;
            const discount = (price - after) / price * 100;
            return discount;
        }

        $('#PriceAfterDiscount').on('blur', () => {
            const discount = calculateDiscount();
            const discounts = [5, 10, 15, 20, 25, 30];
            if (discounts.indexOf(discount) === -1) {
                $('.btn-set-discount').removeClass('active')
                var a = `<a class="btn btn-outline-info m-2 btn-set-discount active" onclick="setPriceAfterDiscount(${discount},event)">${discount}%</a>`;
                $('#discountsArea').append(a)
            }
        })


    </script>
}
